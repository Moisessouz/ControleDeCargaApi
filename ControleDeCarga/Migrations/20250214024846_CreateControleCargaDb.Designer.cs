// <auto-generated />
using System;
using ControleDeCarga.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleDeCarga.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250214024846_CreateControleCargaDb")]
    partial class CreateControleCargaDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControleDeCarga.Entities.CategoriaVeiculoEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoriaVeiculo");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.HistoricoMovimentacaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CargaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusAnterior")
                        .HasColumnType("int");

                    b.Property<int>("StatusAtual")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CargaId");

                    b.ToTable("HistoricoMovimentacao");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.MotoristaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransportadoraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransportadoraId");

                    b.ToTable("Motoristas");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.PlanejamentoCargaEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("MotoristaId")
                        .HasColumnType("int");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MotoristaId");

                    b.HasIndex("StatusId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("PlanejamentoCargas");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.StatusCarregamentoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusCarregamento");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.TransportadoraEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transportadoras");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.UsuarioEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PrimeiroAcesso")
                        .HasColumnType("bit");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TentativasAcesso")
                        .HasColumnType("int");

                    b.Property<string>("TipoUsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.UsuarioHierarquiaEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsuarioHierarquia");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.VeiculoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CategoriaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransportadoraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("TransportadoraId");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.HistoricoMovimentacaoEntity", b =>
                {
                    b.HasOne("ControleDeCarga.Entities.PlanejamentoCargaEntity", "Carga")
                        .WithMany("Movimentacao")
                        .HasForeignKey("CargaId");

                    b.Navigation("Carga");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.MotoristaEntity", b =>
                {
                    b.HasOne("ControleDeCarga.Entities.TransportadoraEntity", "Transportadora")
                        .WithMany("Motoristas")
                        .HasForeignKey("TransportadoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transportadora");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.PlanejamentoCargaEntity", b =>
                {
                    b.HasOne("ControleDeCarga.Entities.MotoristaEntity", "Motorista")
                        .WithMany("Cargas")
                        .HasForeignKey("MotoristaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleDeCarga.Entities.StatusCarregamentoEntity", "Status")
                        .WithMany("Cargas")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleDeCarga.Entities.VeiculoEntity", "Veiculo")
                        .WithMany("Cargas")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motorista");

                    b.Navigation("Status");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.UsuarioEntity", b =>
                {
                    b.HasOne("ControleDeCarga.Entities.UsuarioHierarquiaEntity", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.VeiculoEntity", b =>
                {
                    b.HasOne("ControleDeCarga.Entities.CategoriaVeiculoEntity", "Categoria")
                        .WithMany("Veiculos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleDeCarga.Entities.TransportadoraEntity", "Transportadora")
                        .WithMany("Veiculos")
                        .HasForeignKey("TransportadoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Transportadora");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.CategoriaVeiculoEntity", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.MotoristaEntity", b =>
                {
                    b.Navigation("Cargas");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.PlanejamentoCargaEntity", b =>
                {
                    b.Navigation("Movimentacao");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.StatusCarregamentoEntity", b =>
                {
                    b.Navigation("Cargas");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.TransportadoraEntity", b =>
                {
                    b.Navigation("Motoristas");

                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.UsuarioHierarquiaEntity", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ControleDeCarga.Entities.VeiculoEntity", b =>
                {
                    b.Navigation("Cargas");
                });
#pragma warning restore 612, 618
        }
    }
}
